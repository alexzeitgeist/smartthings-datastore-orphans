-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.clusters.Thermostat.types.RelayStateBitmap
--- @alias RelayStateBitmap
---
--- @field public HEAT number 1
--- @field public COOL number 2
--- @field public FAN number 4
--- @field public HEAT_STAGE2 number 8
--- @field public COOL_STAGE2 number 16
--- @field public FAN_STAGE2 number 32
--- @field public FAN_STAGE3 number 64

local RelayStateBitmap = {}
local new_mt = UintABC.new_mt({NAME = "RelayStateBitmap", ID = data_types.name_to_id_map["Uint16"]}, 2)

RelayStateBitmap.BASE_MASK = 0xFFFF
RelayStateBitmap.HEAT = 0x0001
RelayStateBitmap.COOL = 0x0002
RelayStateBitmap.FAN = 0x0004
RelayStateBitmap.HEAT_STAGE2 = 0x0008
RelayStateBitmap.COOL_STAGE2 = 0x0010
RelayStateBitmap.FAN_STAGE2 = 0x0020
RelayStateBitmap.FAN_STAGE3 = 0x0040

RelayStateBitmap.mask_fields = {
  BASE_MASK = 0xFFFF,
  HEAT = 0x0001,
  COOL = 0x0002,
  FAN = 0x0004,
  HEAT_STAGE2 = 0x0008,
  COOL_STAGE2 = 0x0010,
  FAN_STAGE2 = 0x0020,
  FAN_STAGE3 = 0x0040,
}

--- @function RelayStateBitmap:is_heat_set
--- @return boolean True if the value of HEAT is non-zero
RelayStateBitmap.is_heat_set = function(self)
  return (self.value & self.HEAT) ~= 0
end

--- @function RelayStateBitmap:set_heat
--- Set the value of the bit in the HEAT field to 1
RelayStateBitmap.set_heat = function(self)
  if self.value ~= nil then
    self.value = self.value | self.HEAT
  else
    self.value = self.HEAT
  end
end

--- @function RelayStateBitmap:unset_heat
--- Set the value of the bits in the HEAT field to 0
RelayStateBitmap.unset_heat = function(self)
  self.value = self.value & (~self.HEAT & self.BASE_MASK)
end
--- @function RelayStateBitmap:is_cool_set
--- @return boolean True if the value of COOL is non-zero
RelayStateBitmap.is_cool_set = function(self)
  return (self.value & self.COOL) ~= 0
end

--- @function RelayStateBitmap:set_cool
--- Set the value of the bit in the COOL field to 1
RelayStateBitmap.set_cool = function(self)
  if self.value ~= nil then
    self.value = self.value | self.COOL
  else
    self.value = self.COOL
  end
end

--- @function RelayStateBitmap:unset_cool
--- Set the value of the bits in the COOL field to 0
RelayStateBitmap.unset_cool = function(self)
  self.value = self.value & (~self.COOL & self.BASE_MASK)
end
--- @function RelayStateBitmap:is_fan_set
--- @return boolean True if the value of FAN is non-zero
RelayStateBitmap.is_fan_set = function(self)
  return (self.value & self.FAN) ~= 0
end

--- @function RelayStateBitmap:set_fan
--- Set the value of the bit in the FAN field to 1
RelayStateBitmap.set_fan = function(self)
  if self.value ~= nil then
    self.value = self.value | self.FAN
  else
    self.value = self.FAN
  end
end

--- @function RelayStateBitmap:unset_fan
--- Set the value of the bits in the FAN field to 0
RelayStateBitmap.unset_fan = function(self)
  self.value = self.value & (~self.FAN & self.BASE_MASK)
end
--- @function RelayStateBitmap:is_heat_stage2_set
--- @return boolean True if the value of HEAT_STAGE2 is non-zero
RelayStateBitmap.is_heat_stage2_set = function(self)
  return (self.value & self.HEAT_STAGE2) ~= 0
end

--- @function RelayStateBitmap:set_heat_stage2
--- Set the value of the bit in the HEAT_STAGE2 field to 1
RelayStateBitmap.set_heat_stage2 = function(self)
  if self.value ~= nil then
    self.value = self.value | self.HEAT_STAGE2
  else
    self.value = self.HEAT_STAGE2
  end
end

--- @function RelayStateBitmap:unset_heat_stage2
--- Set the value of the bits in the HEAT_STAGE2 field to 0
RelayStateBitmap.unset_heat_stage2 = function(self)
  self.value = self.value & (~self.HEAT_STAGE2 & self.BASE_MASK)
end
--- @function RelayStateBitmap:is_cool_stage2_set
--- @return boolean True if the value of COOL_STAGE2 is non-zero
RelayStateBitmap.is_cool_stage2_set = function(self)
  return (self.value & self.COOL_STAGE2) ~= 0
end

--- @function RelayStateBitmap:set_cool_stage2
--- Set the value of the bit in the COOL_STAGE2 field to 1
RelayStateBitmap.set_cool_stage2 = function(self)
  if self.value ~= nil then
    self.value = self.value | self.COOL_STAGE2
  else
    self.value = self.COOL_STAGE2
  end
end

--- @function RelayStateBitmap:unset_cool_stage2
--- Set the value of the bits in the COOL_STAGE2 field to 0
RelayStateBitmap.unset_cool_stage2 = function(self)
  self.value = self.value & (~self.COOL_STAGE2 & self.BASE_MASK)
end
--- @function RelayStateBitmap:is_fan_stage2_set
--- @return boolean True if the value of FAN_STAGE2 is non-zero
RelayStateBitmap.is_fan_stage2_set = function(self)
  return (self.value & self.FAN_STAGE2) ~= 0
end

--- @function RelayStateBitmap:set_fan_stage2
--- Set the value of the bit in the FAN_STAGE2 field to 1
RelayStateBitmap.set_fan_stage2 = function(self)
  if self.value ~= nil then
    self.value = self.value | self.FAN_STAGE2
  else
    self.value = self.FAN_STAGE2
  end
end

--- @function RelayStateBitmap:unset_fan_stage2
--- Set the value of the bits in the FAN_STAGE2 field to 0
RelayStateBitmap.unset_fan_stage2 = function(self)
  self.value = self.value & (~self.FAN_STAGE2 & self.BASE_MASK)
end
--- @function RelayStateBitmap:is_fan_stage3_set
--- @return boolean True if the value of FAN_STAGE3 is non-zero
RelayStateBitmap.is_fan_stage3_set = function(self)
  return (self.value & self.FAN_STAGE3) ~= 0
end

--- @function RelayStateBitmap:set_fan_stage3
--- Set the value of the bit in the FAN_STAGE3 field to 1
RelayStateBitmap.set_fan_stage3 = function(self)
  if self.value ~= nil then
    self.value = self.value | self.FAN_STAGE3
  else
    self.value = self.FAN_STAGE3
  end
end

--- @function RelayStateBitmap:unset_fan_stage3
--- Set the value of the bits in the FAN_STAGE3 field to 0
RelayStateBitmap.unset_fan_stage3 = function(self)
  self.value = self.value & (~self.FAN_STAGE3 & self.BASE_MASK)
end


RelayStateBitmap.mask_methods = {
  is_heat_set = RelayStateBitmap.is_heat_set,
  set_heat = RelayStateBitmap.set_heat,
  unset_heat = RelayStateBitmap.unset_heat,
  is_cool_set = RelayStateBitmap.is_cool_set,
  set_cool = RelayStateBitmap.set_cool,
  unset_cool = RelayStateBitmap.unset_cool,
  is_fan_set = RelayStateBitmap.is_fan_set,
  set_fan = RelayStateBitmap.set_fan,
  unset_fan = RelayStateBitmap.unset_fan,
  is_heat_stage2_set = RelayStateBitmap.is_heat_stage2_set,
  set_heat_stage2 = RelayStateBitmap.set_heat_stage2,
  unset_heat_stage2 = RelayStateBitmap.unset_heat_stage2,
  is_cool_stage2_set = RelayStateBitmap.is_cool_stage2_set,
  set_cool_stage2 = RelayStateBitmap.set_cool_stage2,
  unset_cool_stage2 = RelayStateBitmap.unset_cool_stage2,
  is_fan_stage2_set = RelayStateBitmap.is_fan_stage2_set,
  set_fan_stage2 = RelayStateBitmap.set_fan_stage2,
  unset_fan_stage2 = RelayStateBitmap.unset_fan_stage2,
  is_fan_stage3_set = RelayStateBitmap.is_fan_stage3_set,
  set_fan_stage3 = RelayStateBitmap.set_fan_stage3,
  unset_fan_stage3 = RelayStateBitmap.unset_fan_stage3,
}

RelayStateBitmap.augment_type = function(cls, val)
  setmetatable(val, new_mt)
end

setmetatable(RelayStateBitmap, new_mt)

local has_aliases, aliases = pcall(require, "st.matter.clusters.aliases.Thermostat.types.RelayStateBitmap")
if has_aliases then
  aliases:add_to_class(RelayStateBitmap)
end

return RelayStateBitmap

