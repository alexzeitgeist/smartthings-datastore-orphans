-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.clusters.Thermostat.types.HVACSystemTypeBitmap
--- @alias HVACSystemTypeBitmap
---
--- @field public COOLING_STAGE number 3
--- @field public HEATING_STAGE number 12
--- @field public HEATING_IS_HEAT_PUMP number 16
--- @field public HEATING_USES_FUEL number 32

local HVACSystemTypeBitmap = {}
local new_mt = UintABC.new_mt({NAME = "HVACSystemTypeBitmap", ID = data_types.name_to_id_map["Uint8"]}, 1)

HVACSystemTypeBitmap.BASE_MASK = 0xFFFF
HVACSystemTypeBitmap.COOLING_STAGE = 0x0003
HVACSystemTypeBitmap.HEATING_STAGE = 0x000C
HVACSystemTypeBitmap.HEATING_IS_HEAT_PUMP = 0x0010
HVACSystemTypeBitmap.HEATING_USES_FUEL = 0x0020

HVACSystemTypeBitmap.mask_fields = {
  BASE_MASK = 0xFFFF,
  COOLING_STAGE = 0x0003,
  HEATING_STAGE = 0x000C,
  HEATING_IS_HEAT_PUMP = 0x0010,
  HEATING_USES_FUEL = 0x0020,
}

--- @function HVACSystemTypeBitmap:is_cooling_stage_set
--- @return boolean True if the value of COOLING_STAGE is non-zero
HVACSystemTypeBitmap.is_cooling_stage_set = function(self)
  return (self.value & self.COOLING_STAGE) ~= 0
end

--- @function HVACSystemTypeBitmap:set_cooling_stage
--- Set the value of the bit in the COOLING_STAGE field to 1
HVACSystemTypeBitmap.set_cooling_stage = function(self)
  if self.value ~= nil then
    self.value = self.value | self.COOLING_STAGE
  else
    self.value = self.COOLING_STAGE
  end
end

--- @function HVACSystemTypeBitmap:unset_cooling_stage
--- Set the value of the bits in the COOLING_STAGE field to 0
HVACSystemTypeBitmap.unset_cooling_stage = function(self)
  self.value = self.value & (~self.COOLING_STAGE & self.BASE_MASK)
end
--- @function HVACSystemTypeBitmap:is_heating_stage_set
--- @return boolean True if the value of HEATING_STAGE is non-zero
HVACSystemTypeBitmap.is_heating_stage_set = function(self)
  return (self.value & self.HEATING_STAGE) ~= 0
end

--- @function HVACSystemTypeBitmap:set_heating_stage
--- Set the value of the bit in the HEATING_STAGE field to 1
HVACSystemTypeBitmap.set_heating_stage = function(self)
  if self.value ~= nil then
    self.value = self.value | self.HEATING_STAGE
  else
    self.value = self.HEATING_STAGE
  end
end

--- @function HVACSystemTypeBitmap:unset_heating_stage
--- Set the value of the bits in the HEATING_STAGE field to 0
HVACSystemTypeBitmap.unset_heating_stage = function(self)
  self.value = self.value & (~self.HEATING_STAGE & self.BASE_MASK)
end
--- @function HVACSystemTypeBitmap:is_heating_is_heat_pump_set
--- @return boolean True if the value of HEATING_IS_HEAT_PUMP is non-zero
HVACSystemTypeBitmap.is_heating_is_heat_pump_set = function(self)
  return (self.value & self.HEATING_IS_HEAT_PUMP) ~= 0
end

--- @function HVACSystemTypeBitmap:set_heating_is_heat_pump
--- Set the value of the bit in the HEATING_IS_HEAT_PUMP field to 1
HVACSystemTypeBitmap.set_heating_is_heat_pump = function(self)
  if self.value ~= nil then
    self.value = self.value | self.HEATING_IS_HEAT_PUMP
  else
    self.value = self.HEATING_IS_HEAT_PUMP
  end
end

--- @function HVACSystemTypeBitmap:unset_heating_is_heat_pump
--- Set the value of the bits in the HEATING_IS_HEAT_PUMP field to 0
HVACSystemTypeBitmap.unset_heating_is_heat_pump = function(self)
  self.value = self.value & (~self.HEATING_IS_HEAT_PUMP & self.BASE_MASK)
end
--- @function HVACSystemTypeBitmap:is_heating_uses_fuel_set
--- @return boolean True if the value of HEATING_USES_FUEL is non-zero
HVACSystemTypeBitmap.is_heating_uses_fuel_set = function(self)
  return (self.value & self.HEATING_USES_FUEL) ~= 0
end

--- @function HVACSystemTypeBitmap:set_heating_uses_fuel
--- Set the value of the bit in the HEATING_USES_FUEL field to 1
HVACSystemTypeBitmap.set_heating_uses_fuel = function(self)
  if self.value ~= nil then
    self.value = self.value | self.HEATING_USES_FUEL
  else
    self.value = self.HEATING_USES_FUEL
  end
end

--- @function HVACSystemTypeBitmap:unset_heating_uses_fuel
--- Set the value of the bits in the HEATING_USES_FUEL field to 0
HVACSystemTypeBitmap.unset_heating_uses_fuel = function(self)
  self.value = self.value & (~self.HEATING_USES_FUEL & self.BASE_MASK)
end


HVACSystemTypeBitmap.mask_methods = {
  is_cooling_stage_set = HVACSystemTypeBitmap.is_cooling_stage_set,
  set_cooling_stage = HVACSystemTypeBitmap.set_cooling_stage,
  unset_cooling_stage = HVACSystemTypeBitmap.unset_cooling_stage,
  is_heating_stage_set = HVACSystemTypeBitmap.is_heating_stage_set,
  set_heating_stage = HVACSystemTypeBitmap.set_heating_stage,
  unset_heating_stage = HVACSystemTypeBitmap.unset_heating_stage,
  is_heating_is_heat_pump_set = HVACSystemTypeBitmap.is_heating_is_heat_pump_set,
  set_heating_is_heat_pump = HVACSystemTypeBitmap.set_heating_is_heat_pump,
  unset_heating_is_heat_pump = HVACSystemTypeBitmap.unset_heating_is_heat_pump,
  is_heating_uses_fuel_set = HVACSystemTypeBitmap.is_heating_uses_fuel_set,
  set_heating_uses_fuel = HVACSystemTypeBitmap.set_heating_uses_fuel,
  unset_heating_uses_fuel = HVACSystemTypeBitmap.unset_heating_uses_fuel,
}

HVACSystemTypeBitmap.augment_type = function(cls, val)
  setmetatable(val, new_mt)
end

setmetatable(HVACSystemTypeBitmap, new_mt)

local has_aliases, aliases = pcall(require, "st.matter.clusters.aliases.Thermostat.types.HVACSystemTypeBitmap")
if has_aliases then
  aliases:add_to_class(HVACSystemTypeBitmap)
end

return HVACSystemTypeBitmap

