-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.clusters.Global.types.FloorSurfaceTag: st.matter.data_types.Uint8
--- @alias FloorSurfaceTag
---
--- @field public byte_length number 1
--- @field public CARPET number 0
--- @field public CERAMIC number 1
--- @field public CONCRETE number 2
--- @field public CORK number 3
--- @field public DEEP_CARPET number 4
--- @field public DIRT number 5
--- @field public ENGINEERED_WOOD number 6
--- @field public GLASS number 7
--- @field public GRASS number 8
--- @field public HARDWOOD number 9
--- @field public LAMINATE number 10
--- @field public LINOLEUM number 11
--- @field public MAT number 12
--- @field public METAL number 13
--- @field public PLASTIC number 14
--- @field public POLISHED_CONCRETE number 15
--- @field public RUBBER number 16
--- @field public RUG number 17
--- @field public SAND number 18
--- @field public STONE number 19
--- @field public TATAMI number 20
--- @field public TERRAZZO number 21
--- @field public TILE number 22
--- @field public VINYL number 23

local FloorSurfaceTag = {}
local new_mt = UintABC.new_mt({NAME = "FloorSurfaceTag", ID = data_types.name_to_id_map["Uint8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.CARPET] = "CARPET",
    [self.CERAMIC] = "CERAMIC",
    [self.CONCRETE] = "CONCRETE",
    [self.CORK] = "CORK",
    [self.DEEP_CARPET] = "DEEP_CARPET",
    [self.DIRT] = "DIRT",
    [self.ENGINEERED_WOOD] = "ENGINEERED_WOOD",
    [self.GLASS] = "GLASS",
    [self.GRASS] = "GRASS",
    [self.HARDWOOD] = "HARDWOOD",
    [self.LAMINATE] = "LAMINATE",
    [self.LINOLEUM] = "LINOLEUM",
    [self.MAT] = "MAT",
    [self.METAL] = "METAL",
    [self.PLASTIC] = "PLASTIC",
    [self.POLISHED_CONCRETE] = "POLISHED_CONCRETE",
    [self.RUBBER] = "RUBBER",
    [self.RUG] = "RUG",
    [self.SAND] = "SAND",
    [self.STONE] = "STONE",
    [self.TATAMI] = "TATAMI",
    [self.TERRAZZO] = "TERRAZZO",
    [self.TILE] = "TILE",
    [self.VINYL] = "VINYL",
  }
  return string.format("%s: %s", self.field_name or self.NAME, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print

new_mt.__index.CARPET  = 0x00
new_mt.__index.CERAMIC  = 0x01
new_mt.__index.CONCRETE  = 0x02
new_mt.__index.CORK  = 0x03
new_mt.__index.DEEP_CARPET  = 0x04
new_mt.__index.DIRT  = 0x05
new_mt.__index.ENGINEERED_WOOD  = 0x06
new_mt.__index.GLASS  = 0x07
new_mt.__index.GRASS  = 0x08
new_mt.__index.HARDWOOD  = 0x09
new_mt.__index.LAMINATE  = 0x0A
new_mt.__index.LINOLEUM  = 0x0B
new_mt.__index.MAT  = 0x0C
new_mt.__index.METAL  = 0x0D
new_mt.__index.PLASTIC  = 0x0E
new_mt.__index.POLISHED_CONCRETE  = 0x0F
new_mt.__index.RUBBER  = 0x10
new_mt.__index.RUG  = 0x11
new_mt.__index.SAND  = 0x12
new_mt.__index.STONE  = 0x13
new_mt.__index.TATAMI  = 0x14
new_mt.__index.TERRAZZO  = 0x15
new_mt.__index.TILE  = 0x16
new_mt.__index.VINYL  = 0x17

FloorSurfaceTag.CARPET  = 0x00
FloorSurfaceTag.CERAMIC  = 0x01
FloorSurfaceTag.CONCRETE  = 0x02
FloorSurfaceTag.CORK  = 0x03
FloorSurfaceTag.DEEP_CARPET  = 0x04
FloorSurfaceTag.DIRT  = 0x05
FloorSurfaceTag.ENGINEERED_WOOD  = 0x06
FloorSurfaceTag.GLASS  = 0x07
FloorSurfaceTag.GRASS  = 0x08
FloorSurfaceTag.HARDWOOD  = 0x09
FloorSurfaceTag.LAMINATE  = 0x0A
FloorSurfaceTag.LINOLEUM  = 0x0B
FloorSurfaceTag.MAT  = 0x0C
FloorSurfaceTag.METAL  = 0x0D
FloorSurfaceTag.PLASTIC  = 0x0E
FloorSurfaceTag.POLISHED_CONCRETE  = 0x0F
FloorSurfaceTag.RUBBER  = 0x10
FloorSurfaceTag.RUG  = 0x11
FloorSurfaceTag.SAND  = 0x12
FloorSurfaceTag.STONE  = 0x13
FloorSurfaceTag.TATAMI  = 0x14
FloorSurfaceTag.TERRAZZO  = 0x15
FloorSurfaceTag.TILE  = 0x16
FloorSurfaceTag.VINYL  = 0x17

FloorSurfaceTag.augment_type = function(cls, val)
  setmetatable(val, new_mt)
end

setmetatable(FloorSurfaceTag, new_mt)

local has_aliases, aliases = pcall(require, "st.matter.clusters.aliases.Global.types.FloorSurfaceTag")
if has_aliases then
  aliases:add_to_class(FloorSurfaceTag)
end

return FloorSurfaceTag

