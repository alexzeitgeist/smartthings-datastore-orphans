-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local event_mt = {}
event_mt.__event_cache = {}
event_mt.__index = function(self, key)
  if event_mt.__event_cache[key] == nil then
    local req_loc = string.format("st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.%s", key)
    local raw_def = require(req_loc)
    local cluster = rawget(self, "_cluster")
    raw_def:set_parent_cluster(cluster)
    event_mt.__event_cache[key] = raw_def
  end
  return event_mt.__event_cache[key]
end

--- @class st.matter.generated.zap_clusters.PumpConfigurationAndControlEvents
---
--- @field public SupplyVoltageLow st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.SupplyVoltageLow
--- @field public SupplyVoltageHigh st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.SupplyVoltageHigh
--- @field public PowerMissingPhase st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.PowerMissingPhase
--- @field public SystemPressureLow st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.SystemPressureLow
--- @field public SystemPressureHigh st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.SystemPressureHigh
--- @field public DryRunning st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.DryRunning
--- @field public MotorTemperatureHigh st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.MotorTemperatureHigh
--- @field public PumpMotorFatalFailure st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.PumpMotorFatalFailure
--- @field public ElectronicTemperatureHigh st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.ElectronicTemperatureHigh
--- @field public PumpBlocked st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.PumpBlocked
--- @field public SensorFailure st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.SensorFailure
--- @field public ElectronicNonFatalFailure st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.ElectronicNonFatalFailure
--- @field public ElectronicFatalFailure st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.ElectronicFatalFailure
--- @field public GeneralFault st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.GeneralFault
--- @field public Leakage st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.Leakage
--- @field public AirDetection st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.AirDetection
--- @field public TurbineOperation st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.events.TurbineOperation
local PumpConfigurationAndControlEvents = {}

function PumpConfigurationAndControlEvents:set_parent_cluster(cluster)
  self._cluster = cluster
  return self
end

setmetatable(PumpConfigurationAndControlEvents, event_mt)

return PumpConfigurationAndControlEvents

