-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local attr_mt = {}
attr_mt.__attr_cache = {}
attr_mt.__index = function(self, key)
  if attr_mt.__attr_cache[key] == nil then
    local req_loc = string.format("st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.%s", key)
    local raw_def = require(req_loc)
    local cluster = rawget(self, "_cluster")
    raw_def:set_parent_cluster(cluster)
    attr_mt.__attr_cache[key] = raw_def
  end
  return attr_mt.__attr_cache[key]
end

--- @class st.matter.generated.zap_clusters.PumpConfigurationAndControlServerAttributes
---
--- @field public MaxPressure st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MaxPressure
--- @field public MaxSpeed st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MaxSpeed
--- @field public MaxFlow st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MaxFlow
--- @field public MinConstPressure st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MinConstPressure
--- @field public MaxConstPressure st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MaxConstPressure
--- @field public MinCompPressure st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MinCompPressure
--- @field public MaxCompPressure st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MaxCompPressure
--- @field public MinConstSpeed st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MinConstSpeed
--- @field public MaxConstSpeed st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MaxConstSpeed
--- @field public MinConstFlow st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MinConstFlow
--- @field public MaxConstFlow st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MaxConstFlow
--- @field public MinConstTemp st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MinConstTemp
--- @field public MaxConstTemp st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.MaxConstTemp
--- @field public PumpStatus st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.PumpStatus
--- @field public EffectiveOperationMode st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.EffectiveOperationMode
--- @field public EffectiveControlMode st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.EffectiveControlMode
--- @field public Capacity st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.Capacity
--- @field public Speed st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.Speed
--- @field public LifetimeRunningHours st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.LifetimeRunningHours
--- @field public Power st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.Power
--- @field public LifetimeEnergyConsumed st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.LifetimeEnergyConsumed
--- @field public OperationMode st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.OperationMode
--- @field public ControlMode st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.ControlMode
--- @field public AcceptedCommandList st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.AcceptedCommandList
--- @field public EventList st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.EventList
--- @field public AttributeList st.matter.generated.zap_clusters.PumpConfigurationAndControl.server.attributes.AttributeList
local PumpConfigurationAndControlServerAttributes = {}

function PumpConfigurationAndControlServerAttributes:set_parent_cluster(cluster)
  self._cluster = cluster
  return self
end

setmetatable(PumpConfigurationAndControlServerAttributes, attr_mt)

local has_aliases, aliases = pcall(require, "st.matter.clusters.aliases.PumpConfigurationAndControl.server.attributes")
if has_aliases then
  aliases:add_to_class(PumpConfigurationAndControlServerAttributes)
end

return PumpConfigurationAndControlServerAttributes

