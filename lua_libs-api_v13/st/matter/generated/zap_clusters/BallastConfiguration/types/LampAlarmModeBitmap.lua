-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.clusters.BallastConfiguration.types.LampAlarmModeBitmap
--- @alias LampAlarmModeBitmap
---
--- @field public LAMP_BURN_HOURS number 1

local LampAlarmModeBitmap = {}
local new_mt = UintABC.new_mt({NAME = "LampAlarmModeBitmap", ID = data_types.name_to_id_map["Uint8"]}, 1)

LampAlarmModeBitmap.BASE_MASK = 0xFFFF
LampAlarmModeBitmap.LAMP_BURN_HOURS = 0x0001

LampAlarmModeBitmap.mask_fields = {
  BASE_MASK = 0xFFFF,
  LAMP_BURN_HOURS = 0x0001,
}

--- @function LampAlarmModeBitmap:is_lamp_burn_hours_set
--- @return boolean True if the value of LAMP_BURN_HOURS is non-zero
LampAlarmModeBitmap.is_lamp_burn_hours_set = function(self)
  return (self.value & self.LAMP_BURN_HOURS) ~= 0
end

--- @function LampAlarmModeBitmap:set_lamp_burn_hours
--- Set the value of the bit in the LAMP_BURN_HOURS field to 1
LampAlarmModeBitmap.set_lamp_burn_hours = function(self)
  if self.value ~= nil then
    self.value = self.value | self.LAMP_BURN_HOURS
  else
    self.value = self.LAMP_BURN_HOURS
  end
end

--- @function LampAlarmModeBitmap:unset_lamp_burn_hours
--- Set the value of the bits in the LAMP_BURN_HOURS field to 0
LampAlarmModeBitmap.unset_lamp_burn_hours = function(self)
  self.value = self.value & (~self.LAMP_BURN_HOURS & self.BASE_MASK)
end


LampAlarmModeBitmap.mask_methods = {
  is_lamp_burn_hours_set = LampAlarmModeBitmap.is_lamp_burn_hours_set,
  set_lamp_burn_hours = LampAlarmModeBitmap.set_lamp_burn_hours,
  unset_lamp_burn_hours = LampAlarmModeBitmap.unset_lamp_burn_hours,
}

LampAlarmModeBitmap.augment_type = function(cls, val)
  setmetatable(val, new_mt)
end

setmetatable(LampAlarmModeBitmap, new_mt)

local has_aliases, aliases = pcall(require, "st.matter.clusters.aliases.BallastConfiguration.types.LampAlarmModeBitmap")
if has_aliases then
  aliases:add_to_class(LampAlarmModeBitmap)
end

return LampAlarmModeBitmap

