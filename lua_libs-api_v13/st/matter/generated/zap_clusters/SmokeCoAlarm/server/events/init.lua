-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local event_mt = {}
event_mt.__event_cache = {}
event_mt.__index = function(self, key)
  if event_mt.__event_cache[key] == nil then
    local req_loc = string.format("st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.%s", key)
    local raw_def = require(req_loc)
    local cluster = rawget(self, "_cluster")
    raw_def:set_parent_cluster(cluster)
    event_mt.__event_cache[key] = raw_def
  end
  return event_mt.__event_cache[key]
end

--- @class st.matter.generated.zap_clusters.SmokeCoAlarmEvents
---
--- @field public SmokeAlarm st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.SmokeAlarm
--- @field public COAlarm st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.COAlarm
--- @field public LowBattery st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.LowBattery
--- @field public HardwareFault st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.HardwareFault
--- @field public EndOfService st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.EndOfService
--- @field public SelfTestComplete st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.SelfTestComplete
--- @field public AlarmMuted st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.AlarmMuted
--- @field public MuteEnded st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.MuteEnded
--- @field public InterconnectSmokeAlarm st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.InterconnectSmokeAlarm
--- @field public InterconnectCOAlarm st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.InterconnectCOAlarm
--- @field public AllClear st.matter.generated.zap_clusters.SmokeCoAlarm.server.events.AllClear
local SmokeCoAlarmEvents = {}

function SmokeCoAlarmEvents:set_parent_cluster(cluster)
  self._cluster = cluster
  return self
end

setmetatable(SmokeCoAlarmEvents, event_mt)

return SmokeCoAlarmEvents

