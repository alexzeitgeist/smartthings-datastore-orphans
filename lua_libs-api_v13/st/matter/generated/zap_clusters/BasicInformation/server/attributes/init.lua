-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local attr_mt = {}
attr_mt.__attr_cache = {}
attr_mt.__index = function(self, key)
  if attr_mt.__attr_cache[key] == nil then
    local req_loc = string.format("st.matter.generated.zap_clusters.BasicInformation.server.attributes.%s", key)
    local raw_def = require(req_loc)
    local cluster = rawget(self, "_cluster")
    raw_def:set_parent_cluster(cluster)
    attr_mt.__attr_cache[key] = raw_def
  end
  return attr_mt.__attr_cache[key]
end

--- @class st.matter.generated.zap_clusters.BasicInformationServerAttributes
---
--- @field public DataModelRevision st.matter.generated.zap_clusters.BasicInformation.server.attributes.DataModelRevision
--- @field public VendorName st.matter.generated.zap_clusters.BasicInformation.server.attributes.VendorName
--- @field public VendorID st.matter.generated.zap_clusters.BasicInformation.server.attributes.VendorID
--- @field public ProductName st.matter.generated.zap_clusters.BasicInformation.server.attributes.ProductName
--- @field public ProductID st.matter.generated.zap_clusters.BasicInformation.server.attributes.ProductID
--- @field public NodeLabel st.matter.generated.zap_clusters.BasicInformation.server.attributes.NodeLabel
--- @field public Location st.matter.generated.zap_clusters.BasicInformation.server.attributes.Location
--- @field public HardwareVersion st.matter.generated.zap_clusters.BasicInformation.server.attributes.HardwareVersion
--- @field public HardwareVersionString st.matter.generated.zap_clusters.BasicInformation.server.attributes.HardwareVersionString
--- @field public SoftwareVersion st.matter.generated.zap_clusters.BasicInformation.server.attributes.SoftwareVersion
--- @field public SoftwareVersionString st.matter.generated.zap_clusters.BasicInformation.server.attributes.SoftwareVersionString
--- @field public ManufacturingDate st.matter.generated.zap_clusters.BasicInformation.server.attributes.ManufacturingDate
--- @field public PartNumber st.matter.generated.zap_clusters.BasicInformation.server.attributes.PartNumber
--- @field public ProductURL st.matter.generated.zap_clusters.BasicInformation.server.attributes.ProductURL
--- @field public ProductLabel st.matter.generated.zap_clusters.BasicInformation.server.attributes.ProductLabel
--- @field public SerialNumber st.matter.generated.zap_clusters.BasicInformation.server.attributes.SerialNumber
--- @field public LocalConfigDisabled st.matter.generated.zap_clusters.BasicInformation.server.attributes.LocalConfigDisabled
--- @field public Reachable st.matter.generated.zap_clusters.BasicInformation.server.attributes.Reachable
--- @field public UniqueID st.matter.generated.zap_clusters.BasicInformation.server.attributes.UniqueID
--- @field public CapabilityMinima st.matter.generated.zap_clusters.BasicInformation.server.attributes.CapabilityMinima
--- @field public ProductAppearance st.matter.generated.zap_clusters.BasicInformation.server.attributes.ProductAppearance
--- @field public SpecificationVersion st.matter.generated.zap_clusters.BasicInformation.server.attributes.SpecificationVersion
--- @field public MaxPathsPerInvoke st.matter.generated.zap_clusters.BasicInformation.server.attributes.MaxPathsPerInvoke
--- @field public AcceptedCommandList st.matter.generated.zap_clusters.BasicInformation.server.attributes.AcceptedCommandList
--- @field public EventList st.matter.generated.zap_clusters.BasicInformation.server.attributes.EventList
--- @field public AttributeList st.matter.generated.zap_clusters.BasicInformation.server.attributes.AttributeList
local BasicInformationServerAttributes = {}

function BasicInformationServerAttributes:set_parent_cluster(cluster)
  self._cluster = cluster
  return self
end

setmetatable(BasicInformationServerAttributes, attr_mt)

local has_aliases, aliases = pcall(require, "st.matter.clusters.aliases.BasicInformation.server.attributes")
if has_aliases then
  aliases:add_to_class(BasicInformationServerAttributes)
end

return BasicInformationServerAttributes

