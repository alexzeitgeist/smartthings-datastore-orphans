-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.clusters.ContentLauncher.types.ParameterEnum: st.matter.data_types.Uint8
--- @alias ParameterEnum
---
--- @field public byte_length number 1
--- @field public ACTOR number 0
--- @field public CHANNEL number 1
--- @field public CHARACTER number 2
--- @field public DIRECTOR number 3
--- @field public EVENT number 4
--- @field public FRANCHISE number 5
--- @field public GENRE number 6
--- @field public LEAGUE number 7
--- @field public POPULARITY number 8
--- @field public PROVIDER number 9
--- @field public SPORT number 10
--- @field public SPORTS_TEAM number 11
--- @field public TYPE number 12
--- @field public VIDEO number 13
--- @field public SEASON number 14
--- @field public EPISODE number 15
--- @field public ANY number 16

local ParameterEnum = {}
local new_mt = UintABC.new_mt({NAME = "ParameterEnum", ID = data_types.name_to_id_map["Uint8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.ACTOR] = "ACTOR",
    [self.CHANNEL] = "CHANNEL",
    [self.CHARACTER] = "CHARACTER",
    [self.DIRECTOR] = "DIRECTOR",
    [self.EVENT] = "EVENT",
    [self.FRANCHISE] = "FRANCHISE",
    [self.GENRE] = "GENRE",
    [self.LEAGUE] = "LEAGUE",
    [self.POPULARITY] = "POPULARITY",
    [self.PROVIDER] = "PROVIDER",
    [self.SPORT] = "SPORT",
    [self.SPORTS_TEAM] = "SPORTS_TEAM",
    [self.TYPE] = "TYPE",
    [self.VIDEO] = "VIDEO",
    [self.SEASON] = "SEASON",
    [self.EPISODE] = "EPISODE",
    [self.ANY] = "ANY",
  }
  return string.format("%s: %s", self.field_name or self.NAME, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print

new_mt.__index.ACTOR  = 0x00
new_mt.__index.CHANNEL  = 0x01
new_mt.__index.CHARACTER  = 0x02
new_mt.__index.DIRECTOR  = 0x03
new_mt.__index.EVENT  = 0x04
new_mt.__index.FRANCHISE  = 0x05
new_mt.__index.GENRE  = 0x06
new_mt.__index.LEAGUE  = 0x07
new_mt.__index.POPULARITY  = 0x08
new_mt.__index.PROVIDER  = 0x09
new_mt.__index.SPORT  = 0x0A
new_mt.__index.SPORTS_TEAM  = 0x0B
new_mt.__index.TYPE  = 0x0C
new_mt.__index.VIDEO  = 0x0D
new_mt.__index.SEASON  = 0x0E
new_mt.__index.EPISODE  = 0x0F
new_mt.__index.ANY  = 0x10

ParameterEnum.ACTOR  = 0x00
ParameterEnum.CHANNEL  = 0x01
ParameterEnum.CHARACTER  = 0x02
ParameterEnum.DIRECTOR  = 0x03
ParameterEnum.EVENT  = 0x04
ParameterEnum.FRANCHISE  = 0x05
ParameterEnum.GENRE  = 0x06
ParameterEnum.LEAGUE  = 0x07
ParameterEnum.POPULARITY  = 0x08
ParameterEnum.PROVIDER  = 0x09
ParameterEnum.SPORT  = 0x0A
ParameterEnum.SPORTS_TEAM  = 0x0B
ParameterEnum.TYPE  = 0x0C
ParameterEnum.VIDEO  = 0x0D
ParameterEnum.SEASON  = 0x0E
ParameterEnum.EPISODE  = 0x0F
ParameterEnum.ANY  = 0x10

ParameterEnum.augment_type = function(cls, val)
  setmetatable(val, new_mt)
end

setmetatable(ParameterEnum, new_mt)

local has_aliases, aliases = pcall(require, "st.matter.clusters.aliases.ContentLauncher.types.ParameterEnum")
if has_aliases then
  aliases:add_to_class(ParameterEnum)
end

return ParameterEnum

