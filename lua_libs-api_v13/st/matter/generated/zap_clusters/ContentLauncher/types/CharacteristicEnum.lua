-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.clusters.ContentLauncher.types.CharacteristicEnum: st.matter.data_types.Uint8
--- @alias CharacteristicEnum
---
--- @field public byte_length number 1
--- @field public FORCED_SUBTITLES number 0
--- @field public DESCRIBES_VIDEO number 1
--- @field public EASY_TO_READ number 2
--- @field public FRAME_BASED number 3
--- @field public MAIN_PROGRAM number 4
--- @field public ORIGINAL_CONTENT number 5
--- @field public VOICE_OVER_TRANSLATION number 6
--- @field public CAPTION number 7
--- @field public SUBTITLE number 8
--- @field public ALTERNATE number 9
--- @field public SUPPLEMENTARY number 10
--- @field public COMMENTARY number 11
--- @field public DUBBED_TRANSLATION number 12
--- @field public DESCRIPTION number 13
--- @field public METADATA number 14
--- @field public ENHANCED_AUDIO_INTELLIGIBILITY number 15
--- @field public EMERGENCY number 16
--- @field public KARAOKE number 17

local CharacteristicEnum = {}
local new_mt = UintABC.new_mt({NAME = "CharacteristicEnum", ID = data_types.name_to_id_map["Uint8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.FORCED_SUBTITLES] = "FORCED_SUBTITLES",
    [self.DESCRIBES_VIDEO] = "DESCRIBES_VIDEO",
    [self.EASY_TO_READ] = "EASY_TO_READ",
    [self.FRAME_BASED] = "FRAME_BASED",
    [self.MAIN_PROGRAM] = "MAIN_PROGRAM",
    [self.ORIGINAL_CONTENT] = "ORIGINAL_CONTENT",
    [self.VOICE_OVER_TRANSLATION] = "VOICE_OVER_TRANSLATION",
    [self.CAPTION] = "CAPTION",
    [self.SUBTITLE] = "SUBTITLE",
    [self.ALTERNATE] = "ALTERNATE",
    [self.SUPPLEMENTARY] = "SUPPLEMENTARY",
    [self.COMMENTARY] = "COMMENTARY",
    [self.DUBBED_TRANSLATION] = "DUBBED_TRANSLATION",
    [self.DESCRIPTION] = "DESCRIPTION",
    [self.METADATA] = "METADATA",
    [self.ENHANCED_AUDIO_INTELLIGIBILITY] = "ENHANCED_AUDIO_INTELLIGIBILITY",
    [self.EMERGENCY] = "EMERGENCY",
    [self.KARAOKE] = "KARAOKE",
  }
  return string.format("%s: %s", self.field_name or self.NAME, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print

new_mt.__index.FORCED_SUBTITLES  = 0x00
new_mt.__index.DESCRIBES_VIDEO  = 0x01
new_mt.__index.EASY_TO_READ  = 0x02
new_mt.__index.FRAME_BASED  = 0x03
new_mt.__index.MAIN_PROGRAM  = 0x04
new_mt.__index.ORIGINAL_CONTENT  = 0x05
new_mt.__index.VOICE_OVER_TRANSLATION  = 0x06
new_mt.__index.CAPTION  = 0x07
new_mt.__index.SUBTITLE  = 0x08
new_mt.__index.ALTERNATE  = 0x09
new_mt.__index.SUPPLEMENTARY  = 0x0A
new_mt.__index.COMMENTARY  = 0x0B
new_mt.__index.DUBBED_TRANSLATION  = 0x0C
new_mt.__index.DESCRIPTION  = 0x0D
new_mt.__index.METADATA  = 0x0E
new_mt.__index.ENHANCED_AUDIO_INTELLIGIBILITY  = 0x0F
new_mt.__index.EMERGENCY  = 0x10
new_mt.__index.KARAOKE  = 0x11

CharacteristicEnum.FORCED_SUBTITLES  = 0x00
CharacteristicEnum.DESCRIBES_VIDEO  = 0x01
CharacteristicEnum.EASY_TO_READ  = 0x02
CharacteristicEnum.FRAME_BASED  = 0x03
CharacteristicEnum.MAIN_PROGRAM  = 0x04
CharacteristicEnum.ORIGINAL_CONTENT  = 0x05
CharacteristicEnum.VOICE_OVER_TRANSLATION  = 0x06
CharacteristicEnum.CAPTION  = 0x07
CharacteristicEnum.SUBTITLE  = 0x08
CharacteristicEnum.ALTERNATE  = 0x09
CharacteristicEnum.SUPPLEMENTARY  = 0x0A
CharacteristicEnum.COMMENTARY  = 0x0B
CharacteristicEnum.DUBBED_TRANSLATION  = 0x0C
CharacteristicEnum.DESCRIPTION  = 0x0D
CharacteristicEnum.METADATA  = 0x0E
CharacteristicEnum.ENHANCED_AUDIO_INTELLIGIBILITY  = 0x0F
CharacteristicEnum.EMERGENCY  = 0x10
CharacteristicEnum.KARAOKE  = 0x11

CharacteristicEnum.augment_type = function(cls, val)
  setmetatable(val, new_mt)
end

setmetatable(CharacteristicEnum, new_mt)

local has_aliases, aliases = pcall(require, "st.matter.clusters.aliases.ContentLauncher.types.CharacteristicEnum")
if has_aliases then
  aliases:add_to_class(CharacteristicEnum)
end

return CharacteristicEnum

