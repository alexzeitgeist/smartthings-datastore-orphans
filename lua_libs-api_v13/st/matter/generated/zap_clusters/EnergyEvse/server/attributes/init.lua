-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by ZCL Advanced Platform generator.

local attr_mt = {}
attr_mt.__attr_cache = {}
attr_mt.__index = function(self, key)
  if attr_mt.__attr_cache[key] == nil then
    local req_loc = string.format("st.matter.generated.zap_clusters.EnergyEvse.server.attributes.%s", key)
    local raw_def = require(req_loc)
    local cluster = rawget(self, "_cluster")
    raw_def:set_parent_cluster(cluster)
    attr_mt.__attr_cache[key] = raw_def
  end
  return attr_mt.__attr_cache[key]
end

--- @class st.matter.generated.zap_clusters.EnergyEvseServerAttributes
---
--- @field public State st.matter.generated.zap_clusters.EnergyEvse.server.attributes.State
--- @field public SupplyState st.matter.generated.zap_clusters.EnergyEvse.server.attributes.SupplyState
--- @field public FaultState st.matter.generated.zap_clusters.EnergyEvse.server.attributes.FaultState
--- @field public ChargingEnabledUntil st.matter.generated.zap_clusters.EnergyEvse.server.attributes.ChargingEnabledUntil
--- @field public DischargingEnabledUntil st.matter.generated.zap_clusters.EnergyEvse.server.attributes.DischargingEnabledUntil
--- @field public CircuitCapacity st.matter.generated.zap_clusters.EnergyEvse.server.attributes.CircuitCapacity
--- @field public MinimumChargeCurrent st.matter.generated.zap_clusters.EnergyEvse.server.attributes.MinimumChargeCurrent
--- @field public MaximumChargeCurrent st.matter.generated.zap_clusters.EnergyEvse.server.attributes.MaximumChargeCurrent
--- @field public MaximumDischargeCurrent st.matter.generated.zap_clusters.EnergyEvse.server.attributes.MaximumDischargeCurrent
--- @field public UserMaximumChargeCurrent st.matter.generated.zap_clusters.EnergyEvse.server.attributes.UserMaximumChargeCurrent
--- @field public RandomizationDelayWindow st.matter.generated.zap_clusters.EnergyEvse.server.attributes.RandomizationDelayWindow
--- @field public NextChargeStartTime st.matter.generated.zap_clusters.EnergyEvse.server.attributes.NextChargeStartTime
--- @field public NextChargeTargetTime st.matter.generated.zap_clusters.EnergyEvse.server.attributes.NextChargeTargetTime
--- @field public NextChargeRequiredEnergy st.matter.generated.zap_clusters.EnergyEvse.server.attributes.NextChargeRequiredEnergy
--- @field public NextChargeTargetSoC st.matter.generated.zap_clusters.EnergyEvse.server.attributes.NextChargeTargetSoC
--- @field public ApproximateEVEfficiency st.matter.generated.zap_clusters.EnergyEvse.server.attributes.ApproximateEVEfficiency
--- @field public StateOfCharge st.matter.generated.zap_clusters.EnergyEvse.server.attributes.StateOfCharge
--- @field public BatteryCapacity st.matter.generated.zap_clusters.EnergyEvse.server.attributes.BatteryCapacity
--- @field public VehicleID st.matter.generated.zap_clusters.EnergyEvse.server.attributes.VehicleID
--- @field public SessionID st.matter.generated.zap_clusters.EnergyEvse.server.attributes.SessionID
--- @field public SessionDuration st.matter.generated.zap_clusters.EnergyEvse.server.attributes.SessionDuration
--- @field public SessionEnergyCharged st.matter.generated.zap_clusters.EnergyEvse.server.attributes.SessionEnergyCharged
--- @field public SessionEnergyDischarged st.matter.generated.zap_clusters.EnergyEvse.server.attributes.SessionEnergyDischarged
--- @field public AcceptedCommandList st.matter.generated.zap_clusters.EnergyEvse.server.attributes.AcceptedCommandList
--- @field public EventList st.matter.generated.zap_clusters.EnergyEvse.server.attributes.EventList
--- @field public AttributeList st.matter.generated.zap_clusters.EnergyEvse.server.attributes.AttributeList
local EnergyEvseServerAttributes = {}

function EnergyEvseServerAttributes:set_parent_cluster(cluster)
  self._cluster = cluster
  return self
end

setmetatable(EnergyEvseServerAttributes, attr_mt)

local has_aliases, aliases = pcall(require, "st.matter.clusters.aliases.EnergyEvse.server.attributes")
if has_aliases then
  aliases:add_to_class(EnergyEvseServerAttributes)
end

return EnergyEvseServerAttributes

